generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  GOD
  ADMIN
  USER
}

enum OrderStatus {
  PENDING
  SUCCEEDED
  CANCELED
}

model User {
  id         String    @id @default(cuid())
  name       String
  surname    String
  email      String    @unique
  password   String
  role       Role      @default(USER)
  verified   DateTime?
  prvider    String?
  providerId String?

  cretedAt         DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  cart             Cart?
  cartId           String            @unique
  orders           Order[]
  verificationCode VerificationCode?
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  products Product[]

  cretedAt  DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id       Int    @id @default(autoincrement())
  name     String
  imageUrl String
  price    Float

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  ingredients Ingredient[]

  cretedAt  DateTime @default(now())
  updatedAt DateTime @updatedAt

  productVariation ProductVariation[]
}

model ProductVariation {
  id        Int   @id @default(autoincrement())
  price     Float
  size      Int?
  pizzaType Int?

  product   Product    @relation(fields: [productId], references: [id])
  productId Int
  CartItem  CartItem[]
}

model Ingredient {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  imageUrl String
  price    Float
  products Product[]

  cretedAt   DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  CartItem   CartItem? @relation(fields: [cartItemId], references: [id])
  cartItemId Int?
}

model Cart {
  id String @id @default(cuid())

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique
  token  String

  totalAmount Float
  cartItems   CartItem[]
}

model CartItem {
  id               Int              @id @default(autoincrement())
  price            Float
  productVariation ProductVariation @relation(fields: [productId], references: [id])
  productId        Int

  cart   Cart   @relation(fields: [cartId], references: [id])
  cartId String

  quantity Int @default(1)

  ingradient Ingredient[]

  cretedAt  DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id String @id @default(cuid())

  user   User?  @relation(fields: [userId], references: [id])
  userId String

  token       String
  totalAmount Float
  status      OrderStatus @default(PENDING)
  paymentId   String?
  items       Json
  fullName    String
  adress      String
  email       String
  phone       String
  comment     String?

  cretedAt  DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationCode {
  id Int @id @default(autoincrement())

  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique
  createdAt DateTime @default(now())
}
